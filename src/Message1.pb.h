// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message1.proto

#ifndef PROTOBUF_Message1_2eproto__INCLUDED
#define PROTOBUF_Message1_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Message.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Message1_2eproto();
void protobuf_AssignDesc_Message1_2eproto();
void protobuf_ShutdownFile_Message1_2eproto();

class Message1;

// ===================================================================

class Message1 : public ::google::protobuf::Message {
 public:
  Message1();
  virtual ~Message1();

  Message1(const Message1& from);

  inline Message1& operator=(const Message1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message1& default_instance();

  void Swap(Message1* other);

  // implements Message ----------------------------------------------

  Message1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message1& from);
  void MergeFrom(const Message1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // repeated .Message msgs = 2;
  inline int msgs_size() const;
  inline void clear_msgs();
  static const int kMsgsFieldNumber = 2;
  inline const ::Message& msgs(int index) const;
  inline ::Message* mutable_msgs(int index);
  inline ::Message* add_msgs();
  inline const ::google::protobuf::RepeatedPtrField< ::Message >&
      msgs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message >*
      mutable_msgs();

  // @@protoc_insertion_point(class_scope:Message1)
 private:
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_;
  ::google::protobuf::RepeatedPtrField< ::Message > msgs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Message1_2eproto();
  friend void protobuf_AssignDesc_Message1_2eproto();
  friend void protobuf_ShutdownFile_Message1_2eproto();

  void InitAsDefaultInstance();
  static Message1* default_instance_;
};
// ===================================================================


// ===================================================================

// Message1

// optional string str = 1;
inline bool Message1::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message1::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message1::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message1::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& Message1::str() const {
  return *str_;
}
inline void Message1::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void Message1::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void Message1::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Message1::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* Message1::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Message1::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .Message msgs = 2;
inline int Message1::msgs_size() const {
  return msgs_.size();
}
inline void Message1::clear_msgs() {
  msgs_.Clear();
}
inline const ::Message& Message1::msgs(int index) const {
  return msgs_.Get(index);
}
inline ::Message* Message1::mutable_msgs(int index) {
  return msgs_.Mutable(index);
}
inline ::Message* Message1::add_msgs() {
  return msgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message >&
Message1::msgs() const {
  return msgs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message >*
Message1::mutable_msgs() {
  return &msgs_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Message1_2eproto__INCLUDED
